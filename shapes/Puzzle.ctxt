#BlueJ class context
comment0.target=Puzzle
comment0.text=\r\n\ The\ initial\ project\ aims\ to\ develop\ an\ application\ that\ allows\ simulating\ a\r\n\ situation\ inspired\ by\ Problem\ F\ of\ the\ 2023\ Tilting\ international\ programming\ marathon\r\n\ Tiles.\ In\ this\ simulator\ you\ want\ to\ test\ a\ special\ glue,\ Gummy\ Glue,\ which\ is\ used\r\n\ applied\ on\ a\ tile\ causes\ it\ and\ the\ neighboring\ tiles\ to\ stick\ together.\r\n\r\n\ @author\ Andr\u00E9s\ Felipe\ Chavarro\ Plazas\r\n\ @author\ David\ Santiago\ Espinosa\ Rojas\r\n\ @since\ 27-08-2024\r\n\ @version\ Version\ 0.6\r\n
comment1.params=height\ width
comment1.target=Puzzle(int,\ int)
comment1.text=\r\n\ Constructor\ to\ create\ a\ board\ without\ objectives\r\n\ @param\ height\ to\ set\ the\ height\ of\ the\ board.\r\n\ @param\ width\ to\ set\ the\ width\ of\ the\ board.\r\n
comment10.params=direction
comment10.target=void\ tilt(char)
comment11.params=place
comment11.target=void\ directionHorizontal(int)
comment12.params=place
comment12.target=void\ directionVertical(int)
comment13.params=
comment13.target=void\ isGoal()
comment13.text=\r\n\ Function\ to\ compare\ the\ actual\ arrangement\ of\ the\ board\ with\ the\ final\ arrangement\ if\ it\ exists.\r\n\ If\ the\ final\ arrangement\ is\ not\ set,\ it\ will\ print\ a\ message.\r\n\ Otherwise,\ it\ will\ compare\ the\ two\ arrangements\ and\ determinate\ equality.\r\n
comment14.params=
comment14.target=void\ actualArrangemment()
comment14.text=\r\n\ Function\ to\ print\ the\ actual\ arrangement\ of\ the\ board.\ It\ means,\ te\ internal\ function\ of\ the\ board.\r\n
comment15.params=
comment15.target=void\ missPlacedTiles()
comment15.text=\r\n\ Function\ to\ get\ how\ many\ tiles\ can\ be\ placed\ in\ the\ board.\r\n
comment16.params=
comment16.target=void\ makeVisible()
comment16.text=\r\n\ Function\ to\ make\ the\ board\ visible.\ Includes\ the\ table\ and\ the\ tiles.\r\n
comment17.params=
comment17.target=void\ makeInvisible()
comment17.text=\r\n\ Function\ to\ make\ the\ board\ invisible.\ Includes\ the\ table\ and\ the\ tiles.\r\n
comment18.params=
comment18.target=void\ finish()
comment18.text=\r\n\ Function\ to\ finish\ the\ game.\ It\ will\ make\ the\ board\ invisible\ and\ print\ a\ message\ when\ the\ goal\ is\ complete.\r\n
comment19.params=tile
comment19.target=boolean\ isFree(Tiles)
comment2.params=ending
comment2.target=Puzzle(char[][])
comment2.text=\r\n\ Constructor\ to\ create\ a\ board\ with\ objectives,\ board\ is\ built\ empty.\r\n\ @param\ ending\ Matrix\ of\ charts\ with\ the\ final\ objective\ arrangement\ of\ the\ board.\r\n
comment20.params=
comment20.target=void\ setActualBoard()
comment21.params=
comment21.target=void\ makeVisibleC()
comment22.params=
comment22.target=void\ initialPrint()
comment23.params=
comment23.target=int\ getHeight()
comment24.params=height
comment24.target=void\ setHeight(int)
comment3.params=start\ ending
comment3.target=Puzzle(char[][],\ char[][])
comment3.text=\r\n\ Constructor\ to\ create\ a\ board\ with\ objectives,\ it\ builds\ the\ board\ with\ the\ initial\ arrangement\r\n\ @param\ start\ Matrix\ of\ charts\ with\ the\ initial\ arrangement\ of\ the\ board.\r\n\ @param\ ending\ Matrix\ of\ charts\ with\ the\ final\ objective\ arrangement\ of\ the\ board.\r\n
comment4.params=row\ column\ color
comment4.target=void\ addTile(int,\ int,\ java.lang.String)
comment4.text=\r\n\ Function\ to\ add\ tiles\ to\ the\ board,\ it\ checks\ if\ the\ position\ is\ valid\ and\ if\ it\ is\ empty.\r\n\ @param\ row\ Set\ the\ row\ of\ the\ tile.\r\n\ @param\ column\ Set\ the\ column\ of\ the\ tile.\r\n\ @param\ color\ Set\ the\ color\ and\ name\ of\ the\ tile.\r\n
comment5.params=row\ column
comment5.target=void\ deleteTile(int,\ int)
comment5.text=\r\n\ Function\ to\ delete\ tiles\ from\ the\ board,\ it\ checks\ if\ the\ position\ is\ valid\ and\ if\ there\ is\ a\ tile.\r\n\ @param\ row\ It's\ the\ row\ of\ the\ tile\ objective.\r\n\ @param\ column\ It's\ the\ column\ of\ the\ tile\ objective.\r\n
comment6.params=from\ to
comment6.target=void\ relocateTile(int[],\ int[])
comment6.text=\r\n\ Function\ to\ relocate\ tiles\ in\ the\ board\ to\ a\ new\ position,\ it\ checks\ if\ the\ position\ is\ valid\ and\ if\ there\ is\ a\ tile.\r\n\ @param\ from\ List\ with\ the\ row\ and\ column\ of\ the\ tile\ to\ move.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ The\ first\ element\ is\ the\ row\ and\ the\ second\ element\ is\ the\ column.\r\n\ @param\ to\ List\ with\ the\ row\ and\ column\ of\ the\ objective\ position.\r\n\ \ \ \ \ \ \ \ \ \ \ The\ first\ element\ is\ the\ row\ and\ the\ second\ element\ is\ the\ column.\r\n
comment7.params=row\ column
comment7.target=void\ addGlue(int,\ int)
comment8.params=row\ column
comment8.target=void\ deleteGlue(int,\ int)
comment9.params=row\ column
comment9.target=void\ makeHole(int,\ int)
numComments=25
